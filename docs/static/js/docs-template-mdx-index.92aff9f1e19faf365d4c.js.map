{"version":3,"sources":["/Volumes/DATA/Projects/react-client-captcha/docs-template-mdx/index.mdx","/Volumes/DATA/Projects/react-client-captcha/src/index.js","/Volumes/DATA/Projects/react-client-captcha/src/style.css"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","alt","src","parentName","of","ClientCaptcha","isMDXComponent","generateCode","chars","charsCount","captcha","i","index","Math","ceil","random","length","indexOf","push","join","generateCaptcha","width","height","fontSize","captchaCode","backgroundColor","fontFamily","fontColor","ctx","canvasRef","current","getContext","fillStyle","fillRect","font","textAlign","textBaseline","fillText","split","React","createRef","this","retryIcon","containerClassName","captchaClassName","retryButtonClassName","retryImgClassName","retry","retryIconSize","className","ref","style","pointerEvents","onClick","id","Component","defaultProps","cssClasses","retryButton","captchaContainer","module","exports"],"mappings":"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","file":"static/js/docs-template-mdx-index.3720a6b4.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Props } from \"docz\";\nimport ClientCaptcha from \"../src\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"react-client-captcha\"\n    }}>{`react-client-captcha`}</h1>\n    <p><img alt=\"ClientCaptcha Screenshot\" src=\"https://raw.githubusercontent.com/majid-amiri/react-client-captcha/master/react-client-captcha.png\" /></p>\n    <p>{`A light JS-based captcha generator.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Custom characters.`}</li>\n      <li parentName=\"ul\">{`Retry functionality.`}</li>\n      <li parentName=\"ul\">{`Easily customizable via props.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p><inlineCode parentName=\"p\">{`npm install react-client-captcha --save`}</inlineCode></p>\n    <p>{`or`}</p>\n    <p><inlineCode parentName=\"p\">{`yarn add react-client-captcha`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/stoic-noyce-fnkkq\"\n      }}><img alt=\"Edit react-client-captcha\" src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" /></a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ClientCaptcha from \"react-client-captcha\";\n\nexport default class App extends React.Component {\n  render() {\n    return <ClientCaptcha captchaCode={code => console.log(code)} />;\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ClientCaptcha} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"license\"\n    }}>{`License`}</h2>\n    <p>{`MIT Â© `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/majid-amiri/\"\n      }}>{`Majid Amiri`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cssClasses from \"./style.css\";\n\nclass ClientCaptcha extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.captchaCode = \"\";\n  }\n\n  componentDidMount() {\n    this.generateCaptcha();\n  }\n\n  generateCode = () => {\n    const { chars, charsCount } = this.props;\n    const captcha = [];\n    for (let i = 0; i < charsCount; i += 1) {\n      const index = Math.ceil(Math.random() * chars.length);\n      if (chars[index] && captcha.indexOf(chars[index]) === -1)\n        captcha.push(chars[index]);\n      else i -= 1;\n    }\n    return captcha.join(\"\");\n  };\n\n  generateCaptcha = () => {\n    const {\n      width,\n      height,\n      fontSize,\n      captchaCode,\n      backgroundColor,\n      fontFamily,\n      fontColor\n    } = this.props;\n    this.captchaCode = this.generateCode();\n    const ctx = this.canvasRef.current.getContext(\"2d\");\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, width, height);\n    ctx.font = `${fontSize}px ${fontFamily}`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = fontColor;\n    ctx.fillText(this.captchaCode.split(\"\").join(\" \"), width / 2, height / 2);\n    captchaCode(this.captchaCode);\n  };\n\n  render() {\n    const {\n      width,\n      height,\n      retryIcon,\n      containerClassName,\n      captchaClassName,\n      retryButtonClassName,\n      retryImgClassName,\n      retry,\n      retryIconSize\n    } = this.props;\n    return (\n      <div className={containerClassName}>\n        <canvas\n          width={width}\n          height={height}\n          ref={this.canvasRef}\n          style={{ pointerEvents: \"none\" }}\n          className={captchaClassName}\n        />\n        {retry && (\n          <button\n            onClick={this.generateCaptcha}\n            id=\"retryButton\"\n            className={retryButtonClassName}\n          >\n            <img\n              src={retryIcon}\n              alt=\"Re-new captcha\"\n              className={retryImgClassName}\n              width={retryIconSize}\n              height={retryIconSize}\n            />\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nClientCaptcha.defaultProps = {\n  width: 100,\n  height: 40,\n  fontSize: 22,\n  fontFamily: \"Arial, Tahoma\",\n  fontColor: \"#000\",\n  chars: \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n  charsCount: 4,\n  backgroundColor: \"#F2F2F2\",\n  retry: true,\n  retryIcon: \"https://cdn.jsdelivr.net/npm/react-client-captcha/dist/retry.svg\",\n  retryIconSize: 24,\n  retryButtonClassName: cssClasses.retryButton,\n  retryImgClassName: \"\",\n  containerClassName: cssClasses.captchaContainer,\n  captchaClassName: \"\"\n};\n\nClientCaptcha.propTypes = {\n  /**\n   * width of captcha image.\n   */\n  width: PropTypes.number.isRequired,\n  /**\n   * height of captcha image.\n   */\n  height: PropTypes.number.isRequired,\n  /**\n   * fontSize of captcha characters.\n   */\n  fontSize: PropTypes.number,\n  /**\n   * fontFamily of captcha characters.\n   */\n  fontFamily: PropTypes.string,\n  /**\n   * fontColor of captcha characters.\n   */\n  fontColor: PropTypes.string,\n  /**\n   * characters that captcha should be made with.\n   */\n  chars: PropTypes.string,\n  /**\n   * count of characters that captcha should be made with.\n   */\n  charsCount: PropTypes.number,\n  /**\n   * function that returns current shown captcha code.\n   */\n  captchaCode: PropTypes.func.isRequired,\n  /**\n   * backgroundColor of captcha image.\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * whether captcha has retry functionality\n   */\n  retry: PropTypes.bool,\n  /**\n   * the icon of retry button\n   */\n  retryIcon: PropTypes.string,\n  /**\n   * size of retry button icon\n   */\n  retryIconSize: PropTypes.number,\n  /**\n   * className of retry button\n   */\n  retryButtonClassName: PropTypes.string,\n  /**\n   * className of retry img\n   */\n  retryImgClassName: PropTypes.string,\n  /**\n   * className of captcha and retry button container div\n   */\n  containerClassName: PropTypes.string,\n  /**\n   * className of captcha image\n   */\n  captchaClassName: PropTypes.string\n};\n\nexport default ClientCaptcha;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"captchaContainer\":\"style_captchaContainer__FWlJo\",\"retryButton\":\"style_retryButton__3Fwvw\"};"],"sourceRoot":""}